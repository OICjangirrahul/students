// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/OICjangirrahul/students/internal/adapters/http"
	"github.com/OICjangirrahul/students/internal/adapters/repositories"
	"github.com/OICjangirrahul/students/internal/config"
	"github.com/OICjangirrahul/students/internal/core/ports"
	"github.com/OICjangirrahul/students/internal/core/services"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeHandlers(cfg *config.Config) (*Handlers, error) {
	db, err := repositories.NewDB(cfg)
	if err != nil {
		return nil, err
	}
	studentRepository := repositories.NewStudentRepository(db, cfg)
	studentService := services.NewStudentService(studentRepository)
	studentHandler := http.NewStudentHandler(studentService)
	teacherRepository := repositories.NewTeacherRepository(db, cfg)
	teacherService := services.NewTeacherService(teacherRepository)
	teacherHandler := http.NewTeacherHandler(teacherService)
	handlers := &Handlers{
		Student: studentHandler,
		Teacher: teacherHandler,
	}
	return handlers, nil
}

// wire.go:

var dbSet = wire.NewSet(repositories.NewDB)

var studentRepositorySet = wire.NewSet(repositories.NewStudentRepository, wire.Bind(new(ports.StudentRepository), new(*repositories.StudentRepository)))

var teacherRepositorySet = wire.NewSet(repositories.NewTeacherRepository, wire.Bind(new(ports.TeacherRepository), new(*repositories.TeacherRepository)))

type Handlers struct {
	Student *http.StudentHandler
	Teacher *http.TeacherHandler
}
